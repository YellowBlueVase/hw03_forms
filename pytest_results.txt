============================= test session starts =============================
platform win32 -- Python 3.8.2, pytest-5.3.5, py-1.8.1, pluggy-0.13.1 -- c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\scripts\python.exe
django: settings: yatube.settings (from ini)
rootdir: C:\Users\KVShi\dev\yandex\PYTHON BACK END\yatube_sprint_3\hw03\hw03_forms, inifile: pytest.ini, testpaths: tests/
plugins: django-3.8.0
collecting ... collected 8 items

tests/test_homework.py::TestPost::test_post_create PASSED                [ 12%]
tests/test_homework.py::TestGroup::test_group_create PASSED              [ 25%]
tests/test_homework.py::TestGroupView::test_group_view PASSED            [ 37%]
tests/test_new.py::TestNewView::test_new_view_get PASSED                 [ 50%]
tests/test_new.py::TestNewView::test_new_view_post FAILED                [ 62%]
tests/test_homework.py::TestPost::test_post_model PASSED                 [ 75%]
tests/test_homework.py::TestPost::test_post_admin PASSED                 [ 87%]
tests/test_homework.py::TestGroup::test_group_model PASSED               [100%]

================================== FAILURES ===================================
_______________________ TestNewView.test_new_view_post ________________________

self = <tests.test_new.TestNewView object at 0x05576EE0>
user_client = <django.test.client.Client object at 0x056725E0>
user = <User: TestUser>, group = <Group: \u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 1>

    @pytest.mark.django_db(transaction=True)
    def test_new_view_post(self, user_client, user, group):
        text = '\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0430!'
        try:
            response = user_client.get('/new')
        except Exception as e:
            assert False, f'''\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 `/new` \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e. \u041e\u0448\u0438\u0431\u043a\u0430: `{e}`'''
        url = '/new/' if response.status_code in (301, 302) else '/new'
    
        response = user_client.post(url, data={'text': text, 'group': group.id})
    
        assert response.status_code in (301, 302), \
            '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0441\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b `/new/` \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0441\u0442\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443'
        post = Post.objects.filter(author=user, text=text, group=group).first()
        assert post is not None, '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438 \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0441\u0442 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 `/new/`'
        assert response.url == '/', '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 `/`'
    
        text = '\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0430 2!'
        response = user_client.post(url, data={'text': text})
        assert response.status_code in (301, 302), \
            '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0441\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b `/new/` \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0441\u0442\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443'
        post = Post.objects.filter(author=user, text=text, group__isnull=True).first()
        assert post is not None, '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438 \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0441\u0442 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 `/new/`'
        assert response.url == '/', '\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 `/`'
    
>       response = user_client.post(url)

tests\test_new.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\lib\site-packages\django\test\client.py:543: in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
venv\lib\site-packages\django\test\client.py:356: in post
    return self.generic('POST', path, post_data, content_type,
venv\lib\site-packages\django\test\client.py:422: in generic
    return self.request(**r)
venv\lib\site-packages\django\test\client.py:503: in request
    raise exc_value
venv\lib\site-packages\django\core\handlers\exception.py:34: in inner
    response = get_response(request)
venv\lib\site-packages\django\core\handlers\base.py:115: in _get_response
    response = self.process_exception_by_middleware(e, request)
venv\lib\site-packages\django\core\handlers\base.py:113: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\lib\site-packages\django\contrib\auth\decorators.py:21: in _wrapped_view
    return view_func(request, *args, **kwargs)
posts\views.py:24: in new_post
    post = form.save(commit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <PostForm bound=True, valid=False, fields=(group;text)>, commit = False

    def save(self, commit=True):
        """
        Save this form's self.instance object if commit=True. Otherwise, add
        a save_m2m() method to the form which can be called after the instance
        is saved manually at a later time. Return the model instance.
        """
        if self.errors:
>           raise ValueError(
                "The %s could not be %s because the data didn't validate." % (
                    self.instance._meta.object_name,
                    'created' if self.instance._state.adding else 'changed',
                )
            )
E           ValueError: The Post could not be created because the data didn't validate.

venv\lib\site-packages\django\forms\models.py:450: ValueError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:222 Internal Server Error: /new/
Traceback (most recent call last):
  File "c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\lib\site-packages\django\core\handlers\base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\lib\site-packages\django\core\handlers\base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\lib\site-packages\django\contrib\auth\decorators.py", line 21, in _wrapped_view
    return view_func(request, *args, **kwargs)
  File "C:\Users\KVShi\dev\yandex\PYTHON BACK END\yatube_sprint_3\hw03\hw03_forms\posts\views.py", line 24, in new_post
    post = form.save(commit=False)
  File "c:\users\kvshi\dev\yandex\python back end\yatube_sprint_3\hw03\hw03_forms\venv\lib\site-packages\django\forms\models.py", line 450, in save
    raise ValueError(
ValueError: The Post could not be created because the data didn't validate.
========================= 1 failed, 7 passed in 3.52s =========================
